#!/usr/bin/python

import sys
import os
import json

from decimal import *

import ffmpeg

def songs_exist(songs):
    found_all = True
    cwd = os.getcwd()
    for name in songs:
        if not os.path.isfile(os.path.join(cwd, name)):
            print(f"File not found: {name}")
            found_all = False
    return found_all

def main(manifest):
    manifest["songs"] = [os.path.join("songs", song) for song in manifest["songs"]]

    if not songs_exist(manifest["songs"]):
        sys.exit(1)

    cwd = os.getcwd()

    bg_image_name = manifest["background-image"]
    if not os.path.isfile(os.path.join(cwd, bg_image_name)):
        print(f"File not found: {bg_image_name}")
        sys.exit(1)

    print(f"Encoding {len(manifest['songs'])} songs...")

    video = ffmpeg.input(os.path.join(cwd, bg_image_name), loop=1, r=1)
    duration = Decimal(0)

    audio_streams = []
    for song in manifest["songs"]:
        full_path = os.path.join(cwd, song)
        name = song[song.find('/')+1:song.rfind('.')]
        audio_info = ffmpeg.probe(full_path)
        song_duration = Decimal(audio_info["format"]["duration"])
        
        prev_duration = duration
        duration += song_duration

        audio_streams.append(ffmpeg.input(full_path))
        video = video.drawtext(name, enable=f"between(t,{prev_duration},{duration})", fontsize=28, x="w-tw-16", y = "h-th-16", fontcolor="white")

    video = video.filter("fps", fps=15)
    audio = ffmpeg.concat(*audio_streams, a=1, v=0)

    jobs = [
        # audio.output("out_audio.m4a").run_async(),
        video.output("out_video.mp4", vcodec="libx264", preset="veryfast", t=duration, r=15).run_async()
    ]
    for job in jobs:
        job.wait()

    os.system("ffmpeg -i out_video.mp4 -i out_audio.m4a -preset veryfast out.mp4")

    print(u"\u001b[0m")

    # print(duration)
    # print(ffmpeg.probe("out_audio.m4a")["format"]["duration"])
    # print(ffmpeg.probe("out_video.mp4")["format"]["duration"])
    # print(ffmpeg.probe("out.mp4")["format"]["duration"])

    # os.remove("out_audio.m4a")
    # os.remove("out_video.mp4")

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print(f"Usage: {os.path.basename(sys.argv[0])}")
        sys.exit(1)
    else:
        fp = sys.argv[1]
        if os.path.isfile(fp):
            with open(fp) as f:
                main(json.load(f))
                sys.exit(0)
        else:
            print(f"File not found: {fp}")
            sys.exit(1)
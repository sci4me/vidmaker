#!/usr/bin/python

import sys
import os
import json
import time
import datetime
import subprocess

from decimal import *

import ffmpeg

def songs_exist(songs):
    found_all = True
    cwd = os.getcwd()
    for name in songs:
        if not os.path.isfile(os.path.join(cwd, name)):
            print(f"File not found: {name}")
            found_all = False
    return found_all

def main(manifest):
    start = time.time()

    manifest["songs"] = [os.path.join("songs", song) for song in manifest["songs"]]

    if not songs_exist(manifest["songs"]):
        sys.exit(1)

    cwd = os.getcwd()

    bg_image_name = manifest["background-image"]
    if not os.path.isfile(os.path.join(cwd, bg_image_name)):
        print(f"File not found: {bg_image_name}")
        sys.exit(1)

    print(f"Encoding {len(manifest['songs'])} songs...")

    video = (
        ffmpeg
            .input(os.path.join(cwd, bg_image_name), framerate=1, loop=1)
            .filter("scale", width=1920, height=1080)
    )
    
    duration = Decimal(0)

    track_list_file = open("track_list.txt", "w")

    audio_streams = []
    for song in manifest["songs"]:
        full_path = os.path.join(cwd, song)
        name = song[song.find('/')+1:song.rfind('.')]

        audio_info = ffmpeg.probe(full_path)
        song_duration = Decimal(audio_info["streams"][0]["duration"])
        
        prev_duration = duration
        duration += song_duration

        song = (
            ffmpeg
                .input(full_path)
                .filter("volume", volume="0dB")
                .filter("volume", volume="0.5")
        )

        audio_streams.append(song)
        video = video.drawtext(name, enable=f"gte(t, {prev_duration})*lt(t, {duration})", fontsize=24, x="w-tw-16", y="16", fontcolor="red")

        track_list_file.write(f"{datetime.timedelta(seconds=int(prev_duration))} - {datetime.timedelta(seconds=int(duration))}  ::  {name}\n")

    track_list_file.close()

    audio = ffmpeg.concat(*audio_streams, a=1, v=0)

    (
        ffmpeg
            .output(video, audio, "out.mp4", vcodec="libx264", crf="26", t=duration, r=10)
            .overwrite_output()
            .run()
    )

    print(u"\u001b[0m")

    real_duration = Decimal(ffmpeg.probe("out.mp4")["format"]["duration"])
    print(f"Calculated: {duration}")
    print(f"Actual:     {real_duration}")
    print(f"Difference: {abs(duration - real_duration)}")
    print()
    print(f"Finished in {datetime.timedelta(seconds=(time.time() - start))} seconds")

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print(f"Usage: {os.path.basename(sys.argv[0])}")
        sys.exit(1)
    else:
        fp = sys.argv[1]
        if os.path.isfile(fp):
            with open(fp) as f:
                main(json.load(f))
                sys.exit(0)
        else:
            print(f"File not found: {fp}")
            sys.exit(1)